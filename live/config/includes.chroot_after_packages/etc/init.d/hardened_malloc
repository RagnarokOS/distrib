#!/bin/sh

### BEGIN INIT INFO
# Provides:		hardened_malloc
# Required-Start:	$all
# Required-Stop:	
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	enable hardened_malloc() at boot time
# Description:		fixes the long boot/poweroff times in the live iso.
### END INIT INFO

DIR="/usr/src/hardened_malloc"

do_build() {
	printf '%s\n' "Building hardened_malloc..."

	make -C "$DIR" -j"$(nproc)" >> /var/messages/hardened_malloc.log
	make -C "$DIR" VARIANT=medium -j"$(nproc)" >> /var/messages/hardened_malloc.log
	make -C "$DIR" VARIANT=light -j"$(nproc)" >> /var/messages/hardened_malloc.log

	mkdir -p /usr/lib/hardened_malloc
	mv "$DIR"/out-strong/libhardened_malloc-strong.so /usr/lib/hardened_malloc/
	mv "$DIR"/out-medium/libhardened_malloc-medium.so /usr/lib/hardened_malloc/
	mv "$DIR"/out-light/libhardened_malloc-light.so /usr/lib/hardened_malloc/

	# Send the build log to user via mail.
	/usr/bin/cat /var/messages/hardened_malloc.log | mail -s "hardened_malloc.log" user
}

do_start() {
	/usr/bin/printf '%s\n' "enabling the hardened memory allocator..."
	# Use the light variant by default as it has a smaller performance hit
	# on old hardware
	ln -sf /usr/lib/hardened_malloc/libhardened_malloc-light.so /usr/lib/libhardened_malloc.so
	/usr/bin/echo "/usr/lib/libhardened_malloc.so" > /etc/ld.so.preload
}

do_stop() {
	/usr/bin/printf '%s\n' "disabling the hardened memory allocator..."
	/usr/bin/echo "" > /etc/ld.so.preload
}

do_check_status() {
	ldd /usr/bin/ls | grep "hardened" >/dev/null
	_ret=$?
	if [ $_ret -eq 0 ]; then
	       exit 0
	fi
}

case "$1" in
	start)	do_build
		do_start
		;;
	stop)	do_stop
		;;
	status) do_check_status
		;;
esac
